<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:websocket="http://www.springframework.org/schema/websocket"
	xsi:schemaLocation="http://www.springframework.org/schema/websocket http://www.springframework.org/schema/websocket/spring-websocket-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />
	
	
	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- image 10mb limit-->
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="104858760"></beans:property>
	</beans:bean>
	
	<beans:bean id="uploadPath_board" class="java.lang.String">
		<beans:constructor-arg value="C:\\zzz\\upload\\board">
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="uploadPath_album" class="java.lang.String">
		<beans:constructor-arg value="C:\\zzz\\upload\\album">
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="uploadPath_community" class="java.lang.String">
		<beans:constructor-arg value="C:\\zzz\\upload\\community">
		</beans:constructor-arg>
	</beans:bean>
	
	<beans:bean id="loginInterceptor" class="com.spring.login.interceptor.LoginInterceptor"></beans:bean>
	<beans:bean id="authInterceptor" class="com.spring.login.interceptor.AuthInterceptor"></beans:bean>
	<interceptors>
		<interceptor>
			<mapping path="/user/post_login"/>
			<beans:ref bean="loginInterceptor"/>
		</interceptor>
		
		<interceptor>
			<mapping path="/board/registerPage.bo"/>
			<mapping path="/board/modifyPage.bo"/>
			<mapping path="/board/removePage.bo"/>			
			
			<mapping path="/album/registerPage.al"/>
			<mapping path="/album/modifyPage.al"/>
			<mapping path="/album/removePage.al"/>
		
			<mapping path="/community/registerPage.co"/>
			<mapping path="/community/modifyPage.co"/>
			<mapping path="/community/removePage.co"/>
		
			<beans:ref bean="authInterceptor"/>
		</interceptor>
	</interceptors>

	<context:component-scan base-package="com.spring" use-default-filters="false">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
	
	<!-- websocket에 사용할 핸들러 객체 생성 -->
	<beans:bean id="socketHandler" class="com.spring.chat.SocketHandler" />
	
	<websocket:handlers>
		<websocket:mapping handler="socketHandler" path="/broadcasting"/>
		<websocket:handshake-interceptors>
			<beans:bean class="com.spring.chat.HandshakeInterceptor" />
		</websocket:handshake-interceptors>
	</websocket:handlers>
	
</beans:beans>







