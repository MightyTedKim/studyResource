package com.spring.ex00;

import javax.inject.Inject;

import org.junit.Ignore;
import org.junit.Test;
import org.junit.runner.RunWith;

import org.springframework.test.context.ContextConfiguration;
import org.springframework.test.context.junit4.SpringJUnit4ClassRunner;

import com.spring.domain.MemberVO;
import com.spring.persistence.MemberDAO;

@RunWith(SpringJUnit4ClassRunner.class)
@ContextConfiguration(locations = {"file:src/main/webapp/WEB-INF/spring/**/root-context.xml"})

public class MemberDAOTest {
	
	@Inject
	private MemberDAO dao;

	@Test
	public void testTime() throws Exception {
		System.out.println(">MemberDAOTest, testTime, dao.getTime() = " + dao.getTime());
	}
	
	@Test
	public void testInsertMember() throws Exception {
		System.out.println(">MemberDAOTest, testInsertMember ");
		
		MemberVO vo = new MemberVO();
		vo.setUserid("user04");
		vo.setUserpw("user04");
		vo.setUsername("USER04");
		vo.setEmail("user04@aaa.com");	
		
		dao.insertMember(vo);
	}
	
	@Test
	public void testReadMember() throws Exception {
		System.out.println(">MemberDAOTest, testReadMember ");		
		MemberVO vo = dao.readMember("user02");
		System.out.println("###Result_testReadMember###" + vo.toString());
	}
	
	@Test
	public void testReadWithPW() throws Exception {
		System.out.println(">MemberDAOTest, testReadMember ");
		MemberVO vo = dao.readWithPW("user02", "user02");
		System.out.println("###Result_testReadWithPW###" + vo.toString());
	}
}
